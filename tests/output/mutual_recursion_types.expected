Cons : (('a * List<'a>) -> List<'a>)
Left : ('a -> Either<'a, 'b>)
Nil : (unit -> List<'a>)
None : (unit -> Option<'a>)
Right : ('a -> Either<'b, 'a>)
Some : ('a -> Option<'a>)
_ : unit
absf : (float -> float)
absi : (int -> int)
acos : (float -> float)
append : (List<'a> -> (List<'a> -> List<'a>))
asin : (float -> float)
atan : (float -> float)
atan2 : (float -> (float -> float))
bindLeft : (('a -> Either<'b, 'c>) -> (Either<'a, 'c> -> Either<'b, 'c>))
bindOption : (('a -> Option<'b>) -> (Option<'a> -> Option<'b>))
bindRight : (('a -> Either<'b, 'c>) -> (Either<'b, 'a> -> Either<'b, 'c>))
ceil : (float -> float)
compose : (('a -> 'b) -> (('c -> 'a) -> ('c -> 'b)))
cos : (float -> float)
curry : ((('a * 'b) -> 'c) -> ('a -> ('b -> 'c)))
even : (int -> bool)
exists : (('a -> bool) -> (List<'a> -> bool))
exp : (float -> float)
filter : (('a -> bool) -> (List<'a> -> List<'a>))
find : (('a -> bool) -> (List<'a> -> Option<'a>))
flip : (('a * 'b) -> ('b * 'a))
floor : (float -> float)
fold : (('a -> ('b -> 'b)) -> ('b -> (List<'a> -> 'b)))
forall : (('a -> bool) -> (List<'a> -> bool))
fst : (('a * 'b) -> 'a)
getLeft : ('a -> (Either<'a, 'b> -> 'a))
getOption : ('a -> (Option<'a> -> 'a))
getRight : ('a -> (Either<'b, 'a> -> 'a))
head : (List<'a> -> Option<'a>)
ignore : ('a -> unit)
indexString : (string -> (int -> char))
iota : (int -> List<int>)
isLeft : (Either<'a, 'b> -> bool)
isNone : (Option<'a> -> bool)
isRight : (Either<'a, 'b> -> bool)
isSome : (Option<'a> -> bool)
konst : ('a -> ('b -> 'a))
length : (List<'a> -> int)
lengthString : (string -> int)
listToString : (ToString 'a) => (List<'a> -> string)
ln : (float -> float)
map : (('a -> 'b) -> (List<'a> -> List<'b>))
mapLeft : (('a -> 'b) -> (Either<'a, 'c> -> Either<'b, 'c>))
mapOption : (('a -> 'b) -> (Option<'a> -> Option<'b>))
mapRight : (('a -> 'b) -> (Either<'c, 'a> -> Either<'c, 'b>))
max : (Ord 'a) => ('a -> ('a -> 'a))
min : (Ord 'a) => ('a -> ('a -> 'a))
negf : (float -> float)
negi : (int -> int)
not : (bool -> bool)
nth : (int -> (List<'a> -> Option<'a>))
odd : (int -> bool)
pow : (float -> (float -> float))
print : (string -> unit)
read : (unit -> string)
replicate : ('a -> (int -> List<'a>))
signf : (float -> float)
signi : (int -> int)
sin : (float -> float)
snd : (('a * 'b) -> 'b)
sqrt : (float -> float)
stringToList : (string -> List<char>)
substring : (string -> (int -> (int -> string)))
tail : (List<'a> -> Option<List<'a>>)
tan : (float -> float)
toBool : (ToBool 'a) => ('a -> bool)
toChar : (ToChar 'a) => ('a -> char)
toFloat : (ToFloat 'a) => ('a -> float)
toInt : (ToInt 'a) => ('a -> int)
toString : (ToString 'a) => ('a -> string)
uncurry : (('a -> ('b -> 'c)) -> (('a * 'b) -> 'c))
