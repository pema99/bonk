sum Expr<'a> =
    | Lit 'a
    | Add (Expr<'a>) * (Expr<'a>)
    | Sub (Expr<'a>) * (Expr<'a>)
    | Mul (Expr<'a>) * (Expr<'a>)
    | Div (Expr<'a>) * (Expr<'a>)
in

rec evaluate = [expr]
    match expr with
    | Lit v -> v
    | Add (l, r) -> evaluate l + evaluate r
    | Sub (l, r) -> evaluate l - evaluate r
    | Mul (l, r) -> evaluate l * evaluate r
    | Div (l, r) -> evaluate l / evaluate r
in

printfn (evaluate (Mul (Lit 5, Add (Lit 3, Lit 2))))