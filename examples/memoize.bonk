// Bonk has a builtin memoization keyword.
// Return values from calls to the a memoized function will be cached,
// preventing them from ever being computed again.
// Note: The keyword only works for pure functions.

memoize rec fib = [n]
    if n < 2 then n
    else fib(n-1) + fib(n-2)
in

let _ = printfn (fib 400) in

memoize let foo = [n]
    fold (+) 0 (iota n)
in

let _ = printfn (foo 400) in