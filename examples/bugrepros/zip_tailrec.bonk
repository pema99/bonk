// This throws some weird exception when tail recursive

let zip = [l] [r]
    rec zipInner = [l] [r] [acc]
        match (l, r) with
        | (Cons (lh, lt), Cons (rh, rt)) ->
            zipInner lt rt (Cons ((lh, rh), acc))
        | (Nil (), Nil ()) -> Nil ()
    in
    zipInner l r (Nil ())
in